[1mdiff --git a/package.json b/package.json[m
[1mindex 3892ea4..10d507c 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -54,9 +54,9 @@[m
     "babel-cli": "^6.24.0",[m
     "esprima-fb": "^15001.1001.0-dev-harmony-fb",[m
     "estree-utils": "^0.1.1",[m
[32m+[m[32m    "gettext-parser": "^1.2.2",[m
     "loader-utils": "^0.2.11",[m
     "mkdirp": "^0.5.1",[m
[31m-    "po2json": "^0.4.1",[m
     "ramda": "^0.17.1"[m
   }[m
 }[m
[1mdiff --git a/src/index.js b/src/index.js[m
[1mindex 01f9abd..19306f2 100644[m
[1m--- a/src/index.js[m
[1m+++ b/src/index.js[m
[36m@@ -2,19 +2,14 @@[m [mconst DEFAULT_GETTEXT = '__'[m
 [m
 import fs from 'fs';[m
 import path from 'path';[m
[31m-import mkdirp from 'mkdirp';[m
 import loaderUtils from 'loader-utils';[m
[31m-import po2json from 'po2json';[m
[31m-import {compose, prop, filter} from 'ramda';[m
[32m+[m[32mimport po2json from 'gettext-parser';[m
 [m
 import {[m
   extractTranslations,[m
[31m-  formatHeader,[m
   parseECMA,[m
[31m-  addFilePath,[m
[31m-  formatWithRequest,[m
   getFilename,[m
[31m-  getFolderPath[m
[32m+[m[32m  makeRelativePath[m
 } from './utils';[m
 [m
 const root = process.env.PWD;[m
[36m@@ -55,35 +50,54 @@[m [mmodule.exports = function(source) {[m
     return source;[m
   }[m
 [m
[31m-  const formatTranslations = formatWithRequest(this.request);[m
[31m-[m
   for (let i = 0; i < outputs.length; i++) {[m
[31m-    try {[m
[32m+[m[32m    let current;[m
[32m+[m[32m    if (fs.existsSync(outputs[i].path)) {[m
       const buffer = fs.readFileSync(outputs[i].path);[m
[31m-      const current = po2json.parse(buffer);[m
[31m-      const newStrings = (node) => !current[prop('text')(node)];[m
[31m-      const found = filter(newStrings)(translations);[m
[31m-[m
[31m-      if (found.length) {[m
[31m-        if (!config.silent) {[m
[31m-          console.log([m
[31m-            `${found.length} new translations found in ${getFilename(this.resourcePath)}`[m
[31m-          );[m
[31m-        }[m
[31m-[m
[31m-        outputs[i].source = formatTranslations(found);[m
[31m-        fs.appendFileSync(outputs[i].path, outputs[i].source);[m
[32m+[m[32m      current = gettextParser.po.parse(buffer, 'utf-8');[m
[32m+[m[32m    } else {[m
[32m+[m[32m      current = {[m
[32m+[m[32m        charset: 'utf-8',[m
[32m+[m[32m        translations: {'': {}}[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m[32m    const newStrings = (node) => !current.translations[''][node.text];[m
[32m+[m[32m    const found = translations.filter(newStrings);[m
[32m+[m
[32m+[m[32m    if (found.length) {[m
[32m+[m[32m      if (!config.silent) {[m
[32m+[m[32m        console.log([m
[32m+[m[32m          `${found.length} new translations found in ${getFilename(this.resourcePath)}`[m
[32m+[m[32m        );[m
       }[m
[32m+[m[32m    }[m
 [m
[31m-    } catch (error) {[m
[31m-      const header_prefix = config.header_prefix || '';[m
[31m-      const header = formatHeader(config.header, outputs[i].language);[m
[31m-      const body = formatTranslations(translations);[m
[31m-      outputs[i].source = `${header_prefix}\n${header}\n${body}`;[m
[32m+[m[32m    current.headers = config.headers;[m
[32m+[m[32m    let trans = current.translations[''];[m
[32m+[m
[32m+[m[32m    translations.forEach((translation) => {[m
[32m+[m[32m      const msgid = translation.text;[m
[32m+[m[32m      const path = makeRelativePath(translation.path);[m
[32m+[m[32m      const reference = `${path}:${translation.loc.line}`;[m
[32m+[m
[32m+[m[32m      if (msgid && trans[msgid]) {[m
[32m+[m[32m        trans[msgid].comments.reference += '\n' + reference;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        trans[msgid] = {[m
[32m+[m[32m          msgid,[m
[32m+[m[32m          msgstr: (translation.pluralForm ? [msgid, translation.PluralForm] : [msgid]),[m
[32m+[m[32m          comments: {[m
[32m+[m[32m            reference: reference[m
[32m+[m[32m          }[m
[32m+[m[32m        };[m
[32m+[m[32m        if (translation.pluralForm) {[m
[32m+[m[32m          trans[msgid].msgid_plural = translation.pluralForm;[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
 [m
[31m-      mkdirp.sync(getFolderPath(outputs[i].path));[m
[31m-      fs.writeFileSync(outputs[i].path, outputs[i].source);[m
[31m-    }[m
[32m+[m[32m    outputBuf = gettextParser.po.compile(current);[m
[32m+[m[32m    require('fs').writeFileSync(outputs[i].path, outputBuf);[m
   }[m
 [m
   return source;[m
